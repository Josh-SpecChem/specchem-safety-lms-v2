{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jshepherd/OneDrive%20-%20SpecChem%2C%20LLC/Desktop/specchem-safety-lms-v2-main/apps/safety-lms/src/lib/supabase/server.ts"],"sourcesContent":["import { createServerClient, type CookieOptions } from \"@supabase/ssr\";\nimport { cookies } from \"next/headers\";\nimport { cache } from \"react\";\n\nexport const createClient = cache(async () => {\n  const cookieStore = await cookies();\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return cookieStore.get(name)?.value;\n        },\n        set(name: string, value: string, options: CookieOptions) {\n          try {\n            cookieStore.set({ name, value, ...options });\n          } catch (error) {\n            // The `cookies().set()` method can only be called from a Server Component or Server Action.\n            // This error can be ignored if you are running tests that don't have a Server Component.\n          }\n        },\n        remove(name: string, options: CookieOptions) {\n          try {\n            cookieStore.set({ name, value: \"\", ...options });\n          } catch (error) {\n            // The `cookies().set()` method can only be called from a Server Component or Server Action.\n            // This error can be ignored if you are running tests that don't have a Server Component.\n          }\n        },\n      },\n    }\n  );\n});\n\n// Legacy export for backward compatibility\nexport const createServerSupabaseClient = createClient;\n\n// Server auth helper for API routes\nexport const serverAuth = {\n  async getCurrentUser() {\n    const supabase = await createClient();\n    const { data: { user }, error } = await supabase.auth.getUser();\n\n    if (error || !user) {\n      return { user: null, profile: null };\n    }\n\n    // Get user profile from profiles table\n    const { data: profile, error: profileError } = await supabase\n      .from(\"profiles\")\n      .select(\"*\")\n      .eq(\"auth_user_id\", user.id)\n      .single();\n\n    if (profileError) {\n      console.error(\"Error fetching user profile:\", profileError);\n      return { user, profile: null };\n    }\n\n    return { user, profile };\n  }\n};\n"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AACA;AACA;;;;AAEO,MAAM,eAAe,IAAA,+UAAK,EAAC;IAChC,MAAM,cAAc,MAAM,IAAA,2QAAO;IAEjC,OAAO,IAAA,8SAAkB,sUAGvB;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAsB;gBACrD,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM;wBAAO,GAAG,OAAO;oBAAC;gBAC5C,EAAE,OAAO,OAAO;gBACd,4FAA4F;gBAC5F,yFAAyF;gBAC3F;YACF;YACA,QAAO,IAAY,EAAE,OAAsB;gBACzC,IAAI;oBACF,YAAY,GAAG,CAAC;wBAAE;wBAAM,OAAO;wBAAI,GAAG,OAAO;oBAAC;gBAChD,EAAE,OAAO,OAAO;gBACd,4FAA4F;gBAC5F,yFAAyF;gBAC3F;YACF;QACF;IACF;AAEJ;AAGO,MAAM,6BAA6B;AAGnC,MAAM,aAAa;IACxB,MAAM;QACJ,MAAM,WAAW,MAAM;QACvB,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QAE7D,IAAI,SAAS,CAAC,MAAM;YAClB,OAAO;gBAAE,MAAM;gBAAM,SAAS;YAAK;QACrC;QAEA,uCAAuC;QACvC,MAAM,EAAE,MAAM,OAAO,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,SAClD,IAAI,CAAC,YACL,MAAM,CAAC,KACP,EAAE,CAAC,gBAAgB,KAAK,EAAE,EAC1B,MAAM;QAET,IAAI,cAAc;YAChB,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,OAAO;gBAAE;gBAAM,SAAS;YAAK;QAC/B;QAEA,OAAO;YAAE;YAAM;QAAQ;IACzB;AACF","debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/jshepherd/OneDrive%20-%20SpecChem%2C%20LLC/Desktop/specchem-safety-lms-v2-main/apps/safety-lms/src/app/api/stats/dashboard/route.ts"],"sourcesContent":["import { createClient } from \"@/lib/supabase/server\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport const dynamic = \"force-dynamic\";\r\n\r\nexport async function GET() {\r\n  try {\r\n    const supabase = await createClient();\r\n\r\n    // Get current user\r\n    const {\r\n      data: { user },\r\n      error: authError,\r\n    } = await supabase.auth.getUser();\r\n\r\n    if (authError || !user) {\r\n      return NextResponse.json(\r\n        { success: false, error: \"Unauthorized\" },\r\n        { status: 401 }\r\n      );\r\n    }\r\n\r\n    // Get user's profile\r\n    const { data: profile, error: profileError } = await supabase\r\n      .from(\"profiles\")\r\n      .select(\"*\")\r\n      .eq(\"auth_user_id\", user.id)\r\n      .single();\r\n\r\n    if (profileError || !profile) {\r\n      return NextResponse.json(\r\n        { success: false, error: \"Profile not found\" },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Get user's enrollments count\r\n    const { count: enrollmentsCount, error: enrollmentsError } = await supabase\r\n      .from(\"enrollments\")\r\n      .select(\"*\", { count: \"exact\", head: true })\r\n      .eq(\"user_id\", profile.id);\r\n\r\n    if (enrollmentsError) {\r\n      console.error(\"Error fetching enrollments:\", enrollmentsError);\r\n    }\r\n\r\n    // Get completed courses count\r\n    const { count: completedCount, error: completedError } = await supabase\r\n      .from(\"enrollments\")\r\n      .select(\"*\", { count: \"exact\", head: true })\r\n      .eq(\"user_id\", profile.id)\r\n      .eq(\"status\", \"completed\");\r\n\r\n    if (completedError) {\r\n      console.error(\"Error fetching completed courses:\", completedError);\r\n    }\r\n\r\n    // Get in-progress courses count\r\n    const { count: inProgressCount, error: inProgressError } = await supabase\r\n      .from(\"enrollments\")\r\n      .select(\"*\", { count: \"exact\", head: true })\r\n      .eq(\"user_id\", profile.id)\r\n      .eq(\"status\", \"in_progress\");\r\n\r\n    if (inProgressError) {\r\n      console.error(\"Error fetching in-progress courses:\", inProgressError);\r\n    }\r\n\r\n    // Calculate certificates (completed courses)\r\n    const certificatesCount = completedCount || 0;\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        totalEnrollments: enrollmentsCount || 0,\r\n        completedCourses: completedCount || 0,\r\n        inProgressCourses: inProgressCount || 0,\r\n        certificates: certificatesCount,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error fetching dashboard stats:\", error);\r\n    return NextResponse.json(\r\n      {\r\n        success: false,\r\n        error:\r\n          error instanceof Error ? error.message : \"Failed to fetch stats\",\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEO,MAAM,UAAU;AAEhB,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,IAAA,2KAAY;QAEnC,mBAAmB;QACnB,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACd,OAAO,SAAS,EACjB,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;QAE/B,IAAI,aAAa,CAAC,MAAM;YACtB,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAe,GACxC;gBAAE,QAAQ;YAAI;QAElB;QAEA,qBAAqB;QACrB,MAAM,EAAE,MAAM,OAAO,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,SAClD,IAAI,CAAC,YACL,MAAM,CAAC,KACP,EAAE,CAAC,gBAAgB,KAAK,EAAE,EAC1B,MAAM;QAET,IAAI,gBAAgB,CAAC,SAAS;YAC5B,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,OAAO;YAAoB,GAC7C;gBAAE,QAAQ;YAAI;QAElB;QAEA,+BAA+B;QAC/B,MAAM,EAAE,OAAO,gBAAgB,EAAE,OAAO,gBAAgB,EAAE,GAAG,MAAM,SAChE,IAAI,CAAC,eACL,MAAM,CAAC,KAAK;YAAE,OAAO;YAAS,MAAM;QAAK,GACzC,EAAE,CAAC,WAAW,QAAQ,EAAE;QAE3B,IAAI,kBAAkB;YACpB,QAAQ,KAAK,CAAC,+BAA+B;QAC/C;QAEA,8BAA8B;QAC9B,MAAM,EAAE,OAAO,cAAc,EAAE,OAAO,cAAc,EAAE,GAAG,MAAM,SAC5D,IAAI,CAAC,eACL,MAAM,CAAC,KAAK;YAAE,OAAO;YAAS,MAAM;QAAK,GACzC,EAAE,CAAC,WAAW,QAAQ,EAAE,EACxB,EAAE,CAAC,UAAU;QAEhB,IAAI,gBAAgB;YAClB,QAAQ,KAAK,CAAC,qCAAqC;QACrD;QAEA,gCAAgC;QAChC,MAAM,EAAE,OAAO,eAAe,EAAE,OAAO,eAAe,EAAE,GAAG,MAAM,SAC9D,IAAI,CAAC,eACL,MAAM,CAAC,KAAK;YAAE,OAAO;YAAS,MAAM;QAAK,GACzC,EAAE,CAAC,WAAW,QAAQ,EAAE,EACxB,EAAE,CAAC,UAAU;QAEhB,IAAI,iBAAiB;YACnB,QAAQ,KAAK,CAAC,uCAAuC;QACvD;QAEA,6CAA6C;QAC7C,MAAM,oBAAoB,kBAAkB;QAE5C,OAAO,+QAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,MAAM;gBACJ,kBAAkB,oBAAoB;gBACtC,kBAAkB,kBAAkB;gBACpC,mBAAmB,mBAAmB;gBACtC,cAAc;YAChB;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO,+QAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,OACE,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAC7C,GACA;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}